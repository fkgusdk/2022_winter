'''
되돌아오기 2
좌표평면 위 (0, 0)에서 북쪽을 향한 상태에서 움직이는 것을 시작하려 합니다. N개의 명령에 따라 총 N번 움직이며, 명령 L이 주어지면 왼쪽으로 90도 방향 전환을, 명령 R이 주어지면 오른쪽으로 90도 방향전환을 하고, 명령 F가 주어지면 바라보고 있는 방향으로 한칸 이동하려고 합니다. 1초에 한 칸씩 움직이며, 회전에도 1초의 시간이 걸린다 했을 때, 몇 초 뒤에 처음으로 다시 (0, 0)에 돌아오게 되는지를 판단하는 프로그램을 작성해보세요.

입력 형식
첫 번째 줄에 문자 ‘L', ‘R', 그리고 'F’로만 이루어진 문자열이 하나 주어집니다. 단, 첫 번째 문자는 항상 'F'로 주어짐을 가정해도 좋습니다.

1 ≤ 명령의 길이 ≤ 100,000
출력 형식
첫 번째 줄에 다시 시작점으로 되돌아오는 데 걸리는 시간을 출력합니다. 만약 N번 이동을 진행했는데도 시작점으로 돌아오지 못했다면 -1을 출력합니다.
'''

cmd = input()

# 북 동 남 서
nx = [0,1,0,-1]
ny = [1,0,-1,0]

x, y = 0,0 #스타트 지점
dir_num = 0 # 북
t = 0 # 시간
arrive = -1 # 처음 되돌아온 시간

for e in cmd:
    t += 1
    if e == "F":
        x, y = x + nx[dir_num], y + ny[dir_num]
        if x == 0 and y == 0 and arrive == -1:
            arrive = t
    elif e == "L":
        dir_num = (dir_num + 3) % 4
    else:
        dir_num = (dir_num + 1) % 4

print(arrive)
